# Tests of the project
name: CI / CD

env:
  GODOT_VERSION: 4.4.1
# Whenever a tag push matching pattern "v*" then run the job
on:
  pull_request:
    branches: [ main ]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
    - uses: Scony/godot-gdscript-toolkit@master
    - uses: pre-commit/action@v3.0.1

  tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v4
      - name: Checkout LFS objects
        run: git lfs pull

      - name: unit tests with godot gut
        uses: 100-Devs-1-Game/godot-gut-ci@feature/add-resource-check
        with:
          godot_version: ${{ env.GODOT_VERSION }}
          gut_params: -gdir=res://tests/unit
          project_path: src

      - name: Check resources
        run: |
          CHANGES=$(git status --porcelain | grep -E '\.res$|\.tres$' || true)

          echo "Changed files:"
          echo "$CHANGES"

          if [[ -n "$CHANGES" ]]; then
            echo "::error::Some .tres or .res files are not up to date. Please run the Resource Resaver (button in the top-right of the Godot Editor) and fix any broken resources!"
            git diff -- '*.res' '*.tres'
            exit 1
          else
            echo "All resources are up to date"
          fi


# echo git status:
# echo "$(git status --porcelain)"

# echo git diff:
# echo "$(git diff)"

# if [[ -n "$(git status --porcelain)" ]]; then
#   echo "::error::Some .tres or .res files are not up to date. Please run the Resource Resaver (button in the top-right of the Godot Editor) and fix any broken resources!"
#   exit 1
# else
#   echo "All resources are up to date"
# fi
